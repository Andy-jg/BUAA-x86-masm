STACK 	SEGMENT	PARA	STACK
		DW		100H DUP(?)
STACK	ENDS

DATA	SEGMENT	PARA
	LEN		EQU 	128
	MSG1	DB		'INPUT OPRAND:',13,10,'$'	;THE MSG TO OUTPUT
	MSG2 	DB 		'INPUT STRING 1:',13,10,'$'
	MSG3 	DB 		'INPUT STRING 2:',13,10,'$'
	MSG4	DB		'<','$'
	MSG5	DB		'=','$'
	MSG6	DB		'>','$'
	MSG7	DB		'S3=','$'
	MSG8 	DB 		'INPUT A CHAR:',13,10,'$'
	MSG9	DB 		'CHAR FOUND IN STR1!',13,10,'$'
	MSG10 	DB 		'CHAR NOT FOUND IN STR1!',13,10,'$'
	STR1	DB		LEN-1
			DB		?
			DB		LEN DUP(?)
	STR2	DB		LEN-1
			DB		?
			DB		LEN DUP(?)
	STR3	DB		LEN-1
			DB		?
			DB		LEN DUP(?)
	CHAR 	DB		?
	OP 		DB 		? ;THE OPRAND USER INPUT
DATA 	ENDS

CODE 	SEGMENT PARA
	ASSUME	CS:CODE,DS:DATA,SS:STACK

	HINT 	MACRO 	MSG
		LEA 	DX,MSG ;OUTPUT MSG1
		MOV 	AH,09H
		INT 	21H
		ENDM

	GETOP 	MACRO 
		MOV 	AH,1
		INT 	21H
		SUB 	AL,30H
		MOV 	OP,AL
		ENDM

	NEWLINE MACRO
		PUSH 	AX
		PUSH 	DX
		MOV 	AH,2
		MOV		DL,0DH
		INT 	21H
		MOV 	AH,2
		MOV 	DL,0AH
		INT 	21H
		POP 	DX
		POP 	AX
		ENDM

	GETCHAR MACRO
		MOV		AH,1
		INT 	21H
		MOV 	CHAR,AL
		ENDM

	GETSTR1	PROC
		MOV		DX,OFFSET STR1		
		MOV 	AH,0AH
		INT 	21H	
		MOV		CL,STR1+1
		XOR 	CH,CH
		MOV 	SI,OFFSET STR1+2
		LP1:	INC 	SI
		LOOP 	LP1
		MOV 	BYTE PTR [SI],'$'
		RET
	GETSTR1 ENDP

	GETSTR2 PROC
		MOV		DX,OFFSET STR2				
		MOV 	AH,0AH
		INT 	21H
		MOV		CL,STR2+1
		XOR 	CH,CH	
		MOV 	SI,OFFSET STR2+2
		LP2:INC 	SI
		LOOP 	LP2
		MOV 	BYTE PTR [SI],'$'
		RET
	GETSTR2 ENDP

	STRCAT  PROC
		PUSH 	AX
		CLD
		CAT_LP1:LODSB
		STOSB
		CMP 	AL,0
		JNZ 	CAT_LP1
		POP 	AX
		RET
	STRCAT 	ENDP

	P2_PUTEND	PROC
		MOV 	CL,STR1+1			;SET CX TO LEN FOR LOOP
		ADD 	CL,STR2+1
		XOR 	CH,CH
		MOV 	SI,OFFSET STR3+2  ;GET ACTUAL STRING
		PLP2: 	INC 	SI
		LOOP	PLP2
		MOV 	BYTE PTR [SI],'$'  	;PUT END TO STRING 
		RET
	P2_PUTEND	ENDP
	;STRCMP
	P1	PROC
		PUSH 	CX
		CLD
		PUSH 	SI
		MOV 	CX,1
		SLP1:	LODSB
		CMP 	AL,00H
		JZ 		SLP1_1
		INC 	CX
		JMP 	SHORT SLP1
		SLP1_1:	POP 	SI
		REPE 	CMPSB
		HINT 	STR1+2
		JA 		SL1
		JB 		SL2
		HINT	MSG5
		MOV 	AL,0
		JMP 	SHORT RETURN
		SL1:	HINT	MSG6
		MOV 	AL,1
		JMP  	SHORT RETURN
		SL2:	HINT	MSG4
		MOV 	AL,2
		RETURN:	HINT 	STR2+2
		POP 	CX
		RET
	P1	ENDP
	;STRCAT(S1,S2)+STRCPY(S3,S1)
	P2 	PROC
		;STRCAT(S1,S2)
		PUSH 	AX
		MOV 	SI,OFFSET STR2+2
		MOV 	CL,STR1+1		
		XOR 	CH,CH
		MOV 	DI,OFFSET STR1+2  
		CATLP1: INC 	DI
		LOOP	CATLP1
		CALL 	STRCAT
		;STRCPY(S3,S1)
		MOV 	SI,OFFSET STR1+2
		MOV 	DI,OFFSET STR3+2
		CALL 	STRCAT
		CALL 	P2_PUTEND
		HINT 	MSG7
		HINT 	STR3+2
		POP 	AX
		RET
	P2	ENDP
	;STRCAT(S2,S1)+STRCPY(S3,S2)
	P2_2 PROC
		;STRCAT(S2,S1)
		PUSH 	AX
		MOV 	SI,OFFSET STR1+2
		MOV 	CL,STR2+1		
		XOR 	CH,CH
		MOV 	DI,OFFSET STR2+2  
		CATLP2: INC 	DI
		LOOP	CATLP2
		CALL 	STRCAT
		;STRCPY(S3,S1)
		MOV 	SI,OFFSET STR2+2
		MOV 	DI,OFFSET STR3+2
		CALL 	STRCAT
		CALL 	P2_PUTEND
		HINT 	MSG7
		HINT 	STR3+2
		POP 	AX
		RET
	P2_2 ENDP
	;STRFIND
	P3 	PROC
		HINT 	MSG8
		GETCHAR
		NEWLINE
		MOV		DI,OFFSET STR1+2
		MOV 	CL,STR1+1
		XOR 	CH,CH
		MOV 	AL,CHAR
		CLD
		REPNZ 	SCASB
		JZ 		FOUND
		HINT 	MSG10
		JMP		P3_RETURN
		FOUND:	HINT MSG9
		P3_RETURN:RET
	P3	ENDP
	;SRTCMP+STRCAT+STRCPY
	P4 	PROC
		MOV 	SI,OFFSET STR1+2
		MOV 	DI,OFFSET STR2+2
		CALL 	P1
		NEWLINE
		CMP 	AL,0
		JNE 	LA41
		CALL	P2 
		JMP 	CONTINUE4
		LA41:	CMP 	AL,1
		JNE 	LA42
		CALL 	P2	
		JMP 	CONTINUE4
		LA42:	CMP 	AL,2
		JNE 	CONTINUE4
		CALL 	P2_2	
		CONTINUE4:
		RET
	P4	ENDP

	SWITCH	PROC
		CMP 	OP,1
		JNE 	LA1
		MOV 	SI,OFFSET STR1+2
		MOV 	DI,OFFSET STR2+2
		CALL 	P1
		JMP		CONTINUE
		LA1:	CMP 	OP,2
		JNE 	LA2
		CALL 	P2
		JMP		CONTINUE
		LA2:	CMP 	OP,3
		JNE 	LA3
		CALL 	P3
		JMP		CONTINUE
		LA3:	CMP 	OP,4
		JNE 	LAN
		CALL 	P4
		JMP 	CONTINUE
		LAN:	HINT 	MSG3
		CONTINUE:RET
	SWITCH 	ENDP

	MAIN	PROC 	FAR
		MOV 	AX,DATA
		MOV 	DS,AX
		MOV	 	ES,AX
		
		;input str1
		HINT 	MSG2
		CALL 	GETSTR1
		NEWLINE
		;input str2
		HINT 	MSG3
		CALL 	GETSTR2
		NEWLINE
		;input op
		HINT 	MSG1
		GETOP
		NEWLINE
		;SWITCH OP
		CALL 	SWITCH
			
		EXIT:	MOV 	AX,4C00H
		INT 	21H
	MAIN 	ENDP

CODE 	ENDS
		END 	MAIN