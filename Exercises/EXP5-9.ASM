STACK 	SEGMENT	PARA	STACK
		DW		100H DUP(?)
STACK	ENDS

DATA	SEGMENT	PARA
	TABLE_LEN	DW	16
	TABLE 		DW 	200,300,400,10,20,0,1,8
				DW 	41,40,42,50,60,0FFFFH,2,3
	RESULT 		DB	5 DUP(?),20H,'$'
	NEW_LINE	DB	0DH,0AH,'$'
DATA 	ENDS

CODE 	SEGMENT PARA
		ASSUME	CS:CODE,DS:DATA,SS:STACK

NEWLINE MACRO
	PUSH 	DX
	PUSH	AX
	MOV 	DX,OFFSET NEW_LINE
	MOV 	AH,9
	INT 	21H
	POP 	AX
	POP 	DX
	ENDM

OUTPUT 	PROC
	PART1:
		MOV 	CX,TABLE_LEN
		MOV		SI,OFFSET TABLE
	LP1:				 ;COPY FROM TABLE TO RESULT
		PUSH 	CX
		MOV		CX,5
		MOV 	DI,OFFSET RESULT+4  ;FROM LAST DIGIT TO FIRST
		MOV		AX,[SI]
		MOV		BX,10
	LP1_1:               ;COPY A DIGIT OF NUM TO RESULT
		XOR 	DX,DX
		DIV 	BX
		OR		DL,30H
		MOV		[DI],DL
		DEC		DI   		;FROM LAST DIGIT TO FRIST
		LOOP	LP1_1

		MOV 	DX,OFFSET RESULT
		MOV		AH,9
		INT 	21H
		INC 	SI
		INC 	SI
		POP 	CX
		LOOP 	LP1
		NEWLINE
OUTPUT	ENDP

SORT	PROC
	PART2:
		MOV		CX,TABLE_LEN
		DEC		CX
	LP2:
		MOV 	BX,1
		MOV 	SI,OFFSET TABLE
		PUSH	CX

	LP2_1:
		MOV 	AX,[SI]
		CMP		AX,[SI+2]
		JBE		CONTINUE
		XCHG	AX,[SI+2]
		MOV		[SI],AX
		MOV		BX,0
	CONTINUE:
		ADD 	SI,2
		LOOP 	LP2_1

		POP 	CX
		DEC 	CX
		CMP		BX,1
		JZ 		SORT_RETURN
		JMP		SHORT LP2
	SORT_RETURN:
		RET	
SORT 	ENDP

MAIN	PROC 	FAR
		MOV 	AX,DATA
		MOV 	DS,AX
		;DISPLAY ORIGIN TABLE
		CALL	OUTPUT
		;SORT
		CALL 	SORT
		;DISPLAY ORDERED TABLE
		CALL 	OUTPUT

	EXIT:	
		MOV 	AX,4C00H
		INT 	21H
MAIN 	ENDP

CODE 	ENDS
		END 	MAIN