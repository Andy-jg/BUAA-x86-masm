STACK		SEGMENT	PARA	STACK
STACK_AREA	DW		100H	DUP(0)
STACK		ENDS
 
DATA		SEGMENT	PARA
NUM_A		DW		1606H
NUM_B		DW		1160H
NUM_C		DW		16FFH
NUM_D		DW		0ABCDH

RESULT_L 	DW		0
RESULT_ML	DW		0
RESULT_MH	DW		0
RESULT_H	DW		0

DIVISOR		DW		8000H,4000H,2000H,1000H,800H,400H,200H,100H,80H,40H,20H,10H,8H,4H,2H,1H
DEC_DIVISOR DW		1000H,100H,10H,1H
BYTES 		DW		7
DATA		ENDS
 
CODE		SEGMENT	PARA
			ASSUME	CS:CODE,DS:DATA,SS:STACK
MAIN		PROC	FAR
			MOV		AX,DATA
			MOV		DS,AX

			MOV		AX,NUM_A
			MOV		BX,NUM_C
			MUL		BX
			MOV		RESULT_H,DX
			MOV		RESULT_MH,AX

			MOV		AX,NUM_B
			MOV		BX,NUM_D
			MUL		BX
			MOV		RESULT_ML,DX
			MOV		RESULT_L,AX

			MOV		AX,NUM_A
			MOV		BX,NUM_D
			MUL		BX
			ADD		AX,RESULT_ML
			MOV		RESULT_ML,AX
			ADC		RESULT_MH,0
			ADC		RESULT_H,0
			ADD		DX,RESULT_MH
			MOV		RESULT_MH,DX
			ADC		RESULT_H,0


			MOV		AX,NUM_B
			MOV		BX,NUM_C				
			MUL		BX
			ADD		AX,RESULT_ML
			MOV		RESULT_ML,AX
			ADC		RESULT_MH,0
			ADC		RESULT_H,0
			ADD		DX,RESULT_MH
			MOV		RESULT_MH,DX
			ADC		RESULT_H,0

			CALL 	P2													

EXIT:		MOV		AX,4C00H
			INT		21H
 
MAIN		ENDP

P1 			PROC
			MOV		CX,16
			MOV		AX,RESULT_H
			MOV		SI,OFFSET DIVISOR

LP1:		XOR		DX,DX
			DIV 	WORD PTR[SI]

			PUSH	DX
			OR		AL,30H

			MOV		DL,AL
			MOV		AH,2
			INT		21H
			INC 	SI
			INC		SI
			POP		AX
			LOOP	LP1

			MOV		CX,16
			MOV		AX,RESULT_MH
			MOV		SI,OFFSET DIVISOR

LP2:		XOR		DX,DX
			DIV 	WORD PTR[SI]

			PUSH	DX
			OR		AL,30H

			MOV		DL,AL
			MOV		AH,2
			INT		21H
			INC 	SI
			INC		SI
			POP		AX
			LOOP	LP2

			MOV		CX,16
			MOV		AX,RESULT_ML
			MOV		SI,OFFSET DIVISOR

LP3:		XOR		DX,DX
			DIV 	WORD PTR[SI]

			PUSH	DX
			OR		AL,30H

			MOV		DL,AL
			MOV		AH,2
			INT		21H
			INC 	SI
			INC		SI
			POP		AX
			LOOP	LP3

			MOV		CX,16
			MOV		AX,RESULT_L
			MOV		SI,OFFSET DIVISOR

LP4:		XOR		DX,DX
			DIV 	WORD PTR[SI]

			PUSH	DX
			OR		AL,30H

			MOV		DL,AL
			MOV		AH,2
			INT		21H
			INC 	SI
			INC		SI
			POP		AX
			LOOP	LP4
			RET
P1			ENDP

P2			PROC
			XOR		CX,CX
			MOV		BX,10
LP21:		MOV		SI,WORD PTR BYTES
			XOR 	AX,AX

LP22:		MOV 	AL,BYTE PTR	RESULT_L[SI]
			DIV 	BL
			MOV		BYTE PTR RESULT_L[SI],AL
			DEC 	SI
			CMP 	SI,0
			JGE		LP22

			MOV 	DL,AH
			PUSH 	DX
			INC  	CX

			CMP 	WORD PTR RESULT_L,0
			JNE 	LP21
			CMP 	WORD PTR RESULT_L + 2,0
			JNE 	LP21
			CMP 	WORD PTR RESULT_L + 4,0
			JNE 	LP21
			CMP 	WORD PTR RESULT_L + 6,0
			JNE 	LP21

LP23:		POP 	DX
			OR 		DL,30H
			MOV 	AH,2
			INT 	21H
			LOOP 	LP23

			RET
P2			ENDP

CODE		ENDS
			END 	MAIN